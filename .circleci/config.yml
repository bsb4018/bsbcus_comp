version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1.3

jobs:
  continuous-integration:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout

      - run: 
          name: lint code
          command: echo "Linting repository"

      - run: 
          name: run unit tests
          command: echo "Running unit tests"
  
  continuous-delivery:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    environment:
      REPOSITORY: customer-complaint
      IMAGE_NAME: customer-complaint
      IMAGE_TAG: latest
    steps:
      - checkout
      - run:
          name: Login to Amazon ECR
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      - run:
          name: build and tag
          command: docker build -t $GOOGLE_COMPUTE_ZONE-docker.pkg.dev/${GOOGLE_PROJECT_ID}/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .

      - run: 
          name: configure docker login
          command: gcloud auth configure-docker $GOOGLE_COMPUTE_ZONE-docker.pkg.dev
      
      - run:
          name: push to private repository
          command: docker push $GOOGLE_COMPUTE_ZONE-docker.pkg.dev/${GOOGLE_PROJECT_ID}/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG 

  continuous-deployment:
    machine: true
    resource_class: machine-learning-01/self-hosted-1
    environment:
      REPOSITORY: customer-complaint
      GAR_IMAGE_NAME: customer-complaint
      IMAGE_TAG: latest
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: "ap-south-1"
      MONGO_DB_URL: ${MONGO_DB_URL}
    steps:
      - checkout

      - run:
          name: google cloud authentication
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run: 
          name: configure docker login
          command: gcloud auth configure-docker $GOOGLE_COMPUTE_ZONE-docker.pkg.dev

      - run:
          name: pull image from private repository
          command: docker pull ${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/$REPOSITORY/$GAR_IMAGE_NAME:$IMAGE_TAG 
        
      - run: 
          name: Set env variable
          command: echo 'export IMAGE_NAME="${GOOGLE_COMPUTE_ZONE}-docker.pkg.dev/${GOOGLE_PROJECT_ID}/$REPOSITORY/customer-complaint:$IMAGE_TAG"' >> "$BASH_ENV"

      - run:
          name: start the containers
          command: docker-compose up -d
  
workflows:
  CICD:
    jobs:
      - continuous-integration

      - continuous-delivery:
          requires:
            - continuous-integration

      - sanity-check:
          type: approval
          requires:
          - continuous-delivery

      - continuous-deployment:
          requires:
            - sanity-check
            - continuous-integration
            - continuous-delivery